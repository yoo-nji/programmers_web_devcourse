{
  //!!타입추론 (type inference)
  //: 변수에 할당된 값을 보고 그 타입을 자동으로 추론해 주는 기능이다
  //즉, **변수 선언할 때** 할당되는 값을 보고 타입을 명시하지 않더라도 Typescript가 자동으로 타입을 추론하는 기능임

  let num: number = 10;
  let num2 = 10; //이렇게 해도 에러가 안 남 왜일까?
  //타입추론 때문이다. 마우스를 올려보면 let num2: number이라고 뜸
}

//리턴값(반환값)도 마찬가지다 굳이 지정을 해 주지 않아도 타입추론이 되기 때문에 굳이 명시하지 않아도 오류가 안 났던 거임

{
  //!!단 함수의 매개변수는 기본적으로 타입추론이 되지 않는다
  // function sum(a, b) {
  //   return a + b;
  // }
  // sum(1, 20);
  //해결
  function sum2(a2 = 2, b2 = 4) {
    return a2 + b2;
  }
  sum2(1, 2);
}

//타입 표명: 타입추론의 반대
// 타입을 직접 표기해 주는것

{
  // 💡 그렇다면 타입추론 vs 타입표명
  // 팀의 룰, 개인성향에 따라서 다르다
  //강사님같은 경우엔 타입추론을 적극 활용 => 코드가 깔끔해짐
  //타입추론이 된다면 타입추론을 사용한다
  //타입추론이 문제가 되지 않으면 굳이 타입 표명을 하지 않는다
  //타입스크립트, 리액트, next, vue, nuxt 등에서 사용
}
